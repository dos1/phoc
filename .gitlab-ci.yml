stages:
 - build
 - test
 - package

variables:
  DEPS: git
  ALPINE_EDGE_DEPS: |
        git meson ninja gnome-desktop-dev gobject-introspection-dev
        libinput-dev wayland-dev wayland-protocols libxkbcommon-dev wlroots-dev
  DEB_BUILD_PROFILES: pkg.phoc.embedwlroots

.tags: &tags
  tags:
    - librem5

.build: &build
  script:
    - export LC_ALL=C.UTF-8
    - git submodule update --init
    - meson . _build $BUILD_ARGS
    - ninja -C _build
    - ninja -C _build install

.before_script_debian: &before_script_debian
  - apt-get -y update
  - apt-get -y install $DEPS
  - apt-get -y build-dep .

.before_script_debian_buster: &before_script_debian_buster
  # meson in buster is too old
  - apt-get -y update
  - apt-get -y install wget ca-certificates gnupg
  - wget -O- https://ci.puri.sm/ci-repo.key | apt-key add -
  - echo "deb https://ci.puri.sm/ scratch librem5" > /etc/apt/sources.list.d/ci.list
  - *before_script_debian

.before_script_alpine: &before_script_alpine
  - apk -q add alpine-sdk
  - apk -q add $ALPINE_EDGE_DEPS


build-with-xwayland-debian-buster:
  stage: build
  image: debian:buster
  before_script: *before_script_debian_buster
  variables:
     BUILD_ARGS: -Dxwayland=enabled
  <<: *tags
  <<: *build
  artifacts:
    paths:
      - _build

build-with-xwayland-debian-bullseye:
  stage: build
  image: debian:bullseye
  before_script: *before_script_debian
  variables:
     BUILD_ARGS: -Dxwayland=enabled
  <<: *tags
  <<: *build

build-without-xwayland-debian-buster:
  stage: build
  image: debian:buster
  before_script: *before_script_debian_buster
  variables:
     BUILD_ARGS: -Dxwayland=disabled
  <<: *tags
  <<: *build

build-with-xwayland-alpinelinux-edge:
  stage: build
  image: alpine:edge
  before_script: *before_script_alpine
  variables:
     BUILD_ARGS: -Dxwayland=enabled
  <<: *tags
  <<: *build
  allow_failure: true

build-without-xwayland-alpinelinux-edge:
  stage: build
  image: alpine:edge
  before_script: *before_script_alpine
  variables:
     BUILD_ARGS: -Dxwayland=disabled
  <<: *tags
  <<: *build
  allow_failure: true


unit-test-with-xwayland-debian-buster:
  <<: *tags
  stage: test
  image: debian:buster
  dependencies:
    - build-with-xwayland-debian-buster
  before_script: *before_script_debian_buster
  script:
    - xvfb-run ninja -C _build test
  artifacts:
    when: always
    paths:
      - _build

package-deb-with-wlroots:
  <<: *tags
  stage: package
  image: debian:buster
  before_script: *before_script_debian_buster
  script:
    - git submodule update --init
    - dpkg-buildpackage -uc -us
    # Must not be dynamically linked against wlroots
    - ldd debian/phoc/usr/bin/phoc | grep -qs libwlroots && exit 1 || true
    - cp ../*.deb .
  artifacts:
    paths:
      - "*.deb"

package-deb-without-wlroots:
  <<: *tags
  stage: package
  image: debian:buster
  variables:
    DEB_BUILD_PROFILES: ""
  before_script:
    - echo "deb http://deb.debian.org/debian/ sid main" > /etc/apt/sources.list.d/sid.list
    - apt-get -y update
    # This pulls in wlroots build-deps and so avoids pulling in e.g. mesa from
    # sid due to pulling wlroots from sid
    # Once we have wlroots in our archive we can drop the build profile
    - DEB_BUILD_PROFILES=pkg.phoc.embedwlroots apt-get -y -t buster build-dep .
    - apt-get -y -t sid install libwlroots-dev meson
  script:
    - dpkg-buildpackage -uc -us
    # Must be dynamically linked against wlroots
    - ldd debian/phoc/usr/bin/phoc | grep -qs libwlroots
    - cp ../*.deb .
  artifacts:
    paths:
      - "*.deb"

package-deb-with-wlroots:arm64:
  tags:
    - librem5:arm64
  stage: package
  image: debian:buster
  before_script: *before_script_debian_buster
  script:
    - git submodule update --init
    - dpkg-buildpackage -uc -us
    # Must not be dynamically linked against wlroots
    - ldd debian/phoc/usr/bin/phoc | grep -qs libwlroots && exit 1 || true
    - cp ../*.deb .
  artifacts:
    paths:
      - "*.deb"
