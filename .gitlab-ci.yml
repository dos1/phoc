include:
 - 'https://source.puri.sm/Librem5/librem5-ci/raw/master/librem5-pipeline-definitions.yml'
 - 'https://source.puri.sm/Librem5/librem5-ci/raw/master/librem5-pipeline-amber-jobs.yml'
 - 'https://source.puri.sm/Librem5/librem5-ci/raw/master/librem5-pipeline-byzantium-jobs.yml'

stages:
 - build
 - test
 - package
 - test-package

variables:
  DEPS: git lcov
  ALPINE_EDGE_DEPS: |
        git meson ninja gnome-desktop-dev gobject-introspection-dev
        libinput-dev wayland-dev wayland-protocols libxkbcommon-dev wlroots-dev
  XVFB_RUN: xvfb-run -s -noreset

.tags: &tags
  tags:
    - librem5

.build: &build
  script:
    - export LC_ALL=C.UTF-8
    - git submodule update --init
    - meson . _build $BUILD_ARGS
    - ninja -C _build
    - ninja -C _build install

.before_script_debian: &before_script_debian
  - rm -f ../* || true
  - apt-get -y update
  - apt-get -y install $DEPS
  - apt-get -y build-dep .

.before_script_debian_buster: &before_script_debian_buster
  # meson in buster is too old
  - apt-get -y update
  - apt-get -y install wget ca-certificates gnupg
  - wget -O- https://ci.puri.sm/ci-repo.key | apt-key add -
  - echo "deb https://ci.puri.sm/ scratch librem5" > /etc/apt/sources.list.d/ci.list
  - *before_script_debian

.before_script_alpine: &before_script_alpine
  - apk -q add alpine-sdk
  - apk -q add $ALPINE_EDGE_DEPS


build-with-xwayland-debian-buster:
  stage: build
  image: debian:buster
  before_script: *before_script_debian_buster
  variables:
     BUILD_ARGS: -Dxwayland=enabled -Db_coverage=true
  <<: *tags
  <<: *build
  artifacts:
    paths:
      - _build
  except:
    variables:
      - $PKG_ONLY == "1"

build-with-xwayland-debian-bullseye:
  stage: build
  image: debian:bullseye
  before_script: *before_script_debian
  variables:
     BUILD_ARGS: -Dxwayland=enabled
  <<: *tags
  <<: *build
  except:
    variables:
      - $PKG_ONLY == "1"

build-without-xwayland-debian-buster:
  stage: build
  image: debian:buster
  before_script: *before_script_debian_buster
  variables:
     BUILD_ARGS: -Dxwayland=disabled
  <<: *tags
  <<: *build
  except:
    variables:
      - $PKG_ONLY == "1"

build-with-xwayland-alpinelinux-edge:
  stage: build
  image: alpine:edge
  before_script: *before_script_alpine
  variables:
     BUILD_ARGS: -Dxwayland=enabled
  <<: *tags
  <<: *build
  allow_failure: true
  except:
    variables:
      - $PKG_ONLY == "1"

build-without-xwayland-alpinelinux-edge:
  stage: build
  image: alpine:edge
  before_script: *before_script_alpine
  variables:
     BUILD_ARGS: -Dxwayland=disabled
  <<: *tags
  <<: *build
  allow_failure: true
  except:
    variables:
      - $PKG_ONLY == "1"


unit-test-with-xwayland-debian-buster:
  <<: *tags
  stage: test
  image: debian:buster
  needs:
    - build-with-xwayland-debian-buster
  before_script: *before_script_debian_buster
  script:
    - ${XVFB_RUN} ninja -C _build test
    - ${XVFB_RUN} ninja -C _build coverage
  coverage: '/^\s+lines\.+:\s+([\d.]+\%)\s+/'
  artifacts:
    when: always
    paths:
      - _build
  except:
    variables:
      - $PKG_ONLY == "1"
