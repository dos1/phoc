<protocol name="phosh">
  <interface name="phosh_private" version="4">
    <description summary="Phone shell extensions">
      Private protocol between phosh and the compositor.
    </description>

    <enum name="error">
      <entry name="invalid_argument" value="0"
             summary="an invalid argument was provided in a request"/>
    </enum>

    <!-- only primary output for now -->
    <request name="rotate_display" since="1">
      <description summary="rotate output">
        Rotate the output clockwise 0, 90, 180 or 270 degree.
      </description>
      <arg name="surface" type="object" interface="wl_surface"/>
      <arg name="degree" type="uint"/>
    </request>

    <request name="get_xdg_switcher" since="2">
      <arg name="id" type="new_id" interface="phosh_private_xdg_switcher"/>
    </request>

    <request name="get_dpms_manager" since="4">
      <arg name="id" type="new_id" interface="phosh_private_dpms_manager"/>
    </request>
  </interface>

  <!-- application switch/close handling -->
  <interface name="phosh_private_xdg_switcher" version="3">
    <description summary="Interface to list and raise xdg surfaces">
      The interface is meant to list xdg surfaces (see the xdg-shell
      stable wayland protocol) and to raise these surfaces to the top
      of the window stack.

      It's up to the compositor if it only lists surfaces of the
      xdg-shell stable protocol or also surfaces using unstable versions of
      the xdg-shell protocol.
    </description>
    <enum name="error">
      <entry name="invalid_argument" value="0"
             summary="an invalid argument was provided in a request"/>
    </enum>

    <request name="list_xdg_surfaces" since="2">
      <description summary="Get current xdg surfaces">
        Request to list xdg shell toplevels.
      </description>
    </request>

    <request name="destroy"  type="destructor" since="2">
      <description summary="destroy the xdg_switcher interface instance"/>
    </request>

    <request name="raise_xdg_surface" since="2">
      <description summary="raise the given xdg surface to the top of the stack">
      </description>
      <arg name="app_id" type="string" summary="The app_id of the xdg surface"/>
      <arg name="title" type="string" summary="The title of the xdg surface" allow-null="true"/>
    </request>

    <event name="xdg_surface" since="2">
      <description summary="report an xdg surface"/>
      <arg name="app_id" type="string" summary="the app_id of the xdg surface"/>
      <arg name="title" type="string" summary="the title of the xdg surface" allow-null="true"/>
    </event>

    <event name="list_xdg_surfaces_done" since="2">
      <description summary="all xdg surfaces were sent"/>
    </event>

    <request name="close_xdg_surface" since="3">
      <description summary="close the given xdg surface">
      </description>
      <arg name="app_id" type="string" summary="The app_id of the xdg surface"/>
      <arg name="title" type="string" summary="The title of the xdg surface" allow-null="true"/>
    </request>

  </interface>

  <!-- output dpms handling -->
  <interface name="phosh_private_dpms_manager" version="4">
    <description summary="Interface to handle output dpms">
      The interface is meant to handle output DPMS.
    </description>

    <request name="destroy" type="destructor" since="2">
      <description summary="destroy the dpms_manager interface instance"/>
    </request>

    <enum name="mode" since="4">
      <entry name="on" value="0"
             summary="DPMS mode on"/>
      <entry name="standby" value="1"
             summary="DPMS mode standby"/>
      <entry name="suspend" value="2"
             summary="DPMS mode suspend"/>
      <entry name="off" value="3"
             summary="DPMS mode off"/>
    </enum>

    <request name="set_mode" since="4">
      <description summary="set the given DPMS mode on the output">
      </description>
      <arg name="output" type="object" interface="wl_output" summary="the output to set the dpms mode"/>
      <arg name="mode" type="uint" enum="mode" summary="the dpms mode to set"/>
    </request>

    <event name="mode_changed" since="4">
      <description summary="Report a dpms mode change"/>
      <arg name="output" type="object" interface="wl_output" summary="the output that had it's dpms mode changed"/>
      <arg name="mode" type="uint" enum="mode" summary="the output's dpms mode"/>
    </event>

  </interface>

</protocol>
